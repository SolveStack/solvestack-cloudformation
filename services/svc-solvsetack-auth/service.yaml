Description: >


Parameters:

    ServiceName:
        Description: The name of this service.  This will need to be edited when you create a new service
        Type: String
        Default: svc-solvestack-auth

    VPC:
        Description: The VPC that the ECS cluster is deployed to
        Type: AWS::EC2::VPC::Id

    Cluster:
        Description: Please provide the ECS Cluster ID that this service should run on
        Type: String

    DesiredCount:
        Description: How many instances of this task should we run across our cluster?
        Type: Number
        Default: 1

    ServiceRole:
        Description: The service role created for the Services
        Type: String

    MaxCount:
        Description: Maximum number of instances of this task we can run across our cluster
        Type: Number
        Default: 3

    Listener:
        Description: The Application Load Balancer listener to register with
        Type: String

    HttpsListener:
        Description: The HTTPS listener to register with
        Type: String

    Path:
        Description: The path to register with the Application Load Balancer
        Type: String
        Default: /

    ECSServiceAutoScalingRoleARN:
        Description: The ECS service auto scaling role ARN
        Type: String

    AspNetCoreEnvironment:
        Description: The environment for DOTNET projects
        Type: String
    DbHost:
        Description: The db host for this environment
        Type: String
    DbUser:
        Description: Username to connect to the database
        Type: String
    DbName:
        Description: Name of the database
        Type: String
        Default: svc_solvestack_auth
    DbPassword:
        Description: Password for the database
        Type: String
    Priority:
        Description: priority for lb rules
        Type: String
    ClientSecret:
        Description: secret for the client
        Type: String
    ForceUpgrade:
        Description: Force this service to upgrade
        Type: String
    ContainerImageTag:
        Description: Tag to ID container images
        Type: String
        Default: master
    EnvironmentName:
        Type: String

Resources:

    Service:
        Type: AWS::ECS::Service
        DependsOn: HttpsListenerRule
        Properties:
            ServiceName: !Ref ServiceName
            Cluster: !Ref Cluster
            Role: !Ref ServiceRole
            DesiredCount: !Ref DesiredCount
            TaskDefinition: !Ref TaskDefinition
            LoadBalancers:
                - ContainerName: !Ref ServiceName
                  ContainerPort: 5000
                  TargetGroupArn: !Ref TargetGroup

    TaskDefinition:
        Type: AWS::ECS::TaskDefinition
        Properties:
            Family: !Ref ServiceName
            Volumes:
                -
                  Host:
                    SourcePath: "/efs/auth"
                  Name: "EFS"
            ContainerDefinitions:
                - Name: !Ref ServiceName
                  Essential: true
                  Image: !Sub 461537903867.dkr.ecr.us-west-2.amazonaws.com/svc-solvestack-oauth:master
                  Memory: 128
                  MountPoints:
                    -
                      SourceVolume: "EFS"
                      ContainerPath: "/dpapi/"

                  Environment:
                    - Name: ACCESS_TOKEN_LIFETIME_HOURS
                      Value: 8
                    - Name: ASPNETCORE_ENVIRONMENT
                      Value: !Ref AspNetCoreEnvironment
                    - Name: CLIENT_ID
                      Value: svcsolvestack
                    - Name: CLIENT_NAME
                      Value: "Solvestack Services"
                    - Name: CLIENT_SECRET
                      Value: !Ref ClientSecret
                    - Name: DOTNET_DB_HOST
                      Value: !Ref DbHost
                    - Name: DOTNET_DB_PORT
                      Value: 5432
                    - Name: DOTNET_USER
                      Value: !Ref DbUser
                    - Name: IS_LOCAL
                      Value: False
                    - Name: JWT_AUD
                      Value: svcsolvestack
                    - Name: JWT_SIGNING_KEY
                      Value: yjL4NVwXOTeieT1ZA4i9zB0zB82L8vC8D6PWXqGG7RKbloOWOIbSFa6Kby7D7fKw0GrAuQvykXxSmBzzDBLw50TKcPR75nxsx7leAHWWaQdjLhLGwADKToYyxfbwKnye
                    - Name: POSTGRES_DB
                      Value: !Ref DbName
                    - Name: POSTGRES_PASSWORD
                      Value: !Ref DbPassword
                    - Name: SERVICE_BASE_URL
                      Value: !Sub "https://svc-solvestack-auth.${EnvironmentName}.solvestack.com/"
                    - Name: USE_URLS
                      Value: "http://0.0.0.0:5000"
                    - Name: FORCE_UPGRADE
                      Value: !Ref ForceUpgrade


                  PortMappings:
                    - ContainerPort: 5000
                  LogConfiguration:
                    LogDriver: json-file

    CloudWatchLogsGroup:
        Type: AWS::Logs::LogGroup
        Properties:
            LogGroupName: !Ref AWS::StackName
            RetentionInDays: 365

    TargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            VpcId: !Ref VPC
            Port: 5000
            Protocol: HTTP
            Matcher:
                HttpCode: 200-299
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /service/heartbeat
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 5
            HealthyThresholdCount: 2

    # ListenerRule:
    #     Type: AWS::ElasticLoadBalancingV2::ListenerRule
    #     Properties:
    #         ListenerArn: !Ref Listener
    #         Priority: !Ref Priority
    #         Conditions:
    #             - Field: host-header
    #               Values:
    #                 - !Ref Path
    #         Actions:
    #             - TargetGroupArn: !Ref TargetGroup
    #               Type: forward

    HttpsListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            ListenerArn: !Ref HttpsListener
            Priority: !Ref Priority
            Conditions:
                - Field: host-header
                  Values:
                    - !Ref Path
            Actions:
                - TargetGroupArn: !Ref TargetGroup
                  Type: forward

    ServiceScalableTarget:
        Type: "AWS::ApplicationAutoScaling::ScalableTarget"
        Properties:
            MaxCapacity: !Ref MaxCount
            MinCapacity: !Ref DesiredCount
            ResourceId: !Join
                - /
                - - service
                  - !Ref Cluster
                  - !GetAtt Service.Name
            RoleARN: !Ref ECSServiceAutoScalingRoleARN
            ScalableDimension: ecs:service:DesiredCount
            ServiceNamespace: ecs

    ServiceScaleOutPolicy:
        Type : "AWS::ApplicationAutoScaling::ScalingPolicy"
        Properties:
            PolicyName: !Sub ServiceScaleOutPolicy ${ServiceName}
            PolicyType: StepScaling
            ScalingTargetId: !Ref ServiceScalableTarget
            StepScalingPolicyConfiguration:
                AdjustmentType: ChangeInCapacity
                Cooldown: 1800
                MetricAggregationType: Average
                StepAdjustments:
                - MetricIntervalLowerBound: 0
                  ScalingAdjustment: 1

    ServiceScaleInPolicy:
        Type : "AWS::ApplicationAutoScaling::ScalingPolicy"
        Properties:
            PolicyName: !Sub ServiceScaleInPolicy ${ServiceName}
            PolicyType: StepScaling
            ScalingTargetId: !Ref ServiceScalableTarget
            StepScalingPolicyConfiguration:
                AdjustmentType: ChangeInCapacity
                Cooldown: 1800
                MetricAggregationType: Average
                StepAdjustments:
                - MetricIntervalUpperBound: 0
                  ScalingAdjustment: -1

    CPUScaleOutAlarm:
        Type: AWS::CloudWatch::Alarm
        Properties:
            AlarmName: !Sub CPU utilization greater than 90% ${ServiceName}
            AlarmDescription: Alarm if cpu utilization greater than 90% of reserved cpu
            Namespace: AWS/ECS
            MetricName: CPUUtilization
            Dimensions:
            - Name: ClusterName
              Value: !Ref Cluster
            - Name: ServiceName
              Value: !GetAtt Service.Name
            Statistic: Maximum
            Period: '60'
            EvaluationPeriods: '3'
            Threshold: '90'
            ComparisonOperator: GreaterThanThreshold
            AlarmActions:
            - !Ref ServiceScaleOutPolicy

    CPUScaleInAlarm:
        Type: AWS::CloudWatch::Alarm
        Properties:
            AlarmName: !Sub CPU utilization less than 70% ${ServiceName}
            AlarmDescription: Alarm if cpu utilization greater than 70% of reserved cpu
            Namespace: AWS/ECS
            MetricName: CPUUtilization
            Dimensions:
            - Name: ClusterName
              Value: !Ref Cluster
            - Name: ServiceName
              Value: !GetAtt Service.Name
            Statistic: Maximum
            Period: '60'
            EvaluationPeriods: '10'
            Threshold: '70'
            ComparisonOperator: LessThanThreshold
            AlarmActions:
            - !Ref ServiceScaleInPolicy
